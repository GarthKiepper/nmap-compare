#Author: Weston Arnold
#Last Updated: 5.19.2018

#importing of different required packages
from xml.dom.minidom import parse, parseString
import xml.etree.ElementTree as ET
import sys, traceback
import os.path
import time

list1 = [];
list2 = [];
list3 = [];

list1And2 = [];
list1And3 = [];
list2And3 = [];

#list1 = ["tester", "cobol", "1", "c"];
#list2 = ["tester", "cobol", "java", "2"];
#list3 = ["tester", "java", "3", "c"];

similarElementsFull = []; 

wifiDiffsList = [];
ethernetDiffsList = [];
externalDiffsList = [];

#Parses specifies xml file
def xmlParser(fileName, arrayToFill):
    fileNameToUse = fileName;
    tree = ET.parse(fileNameToUse);
    root = tree.getroot();

    #finds all children of root called "host" and then accessed the further subgroups of address and port
    for each in root.findall('.//host'):
        address = each.find('address');
        port = each.find('.//port');

        #extract data generated by XML parsing and set them to their own variables, then merge them for addition to lists
        toOut = address.attrib['addr'];
        protocol = port.attrib['protocol'];
        portNo = port.attrib['portid'];
        connectionInfo = toOut + protocol + portNo; #(Ex: "127.0.0.1tcp80")
        
        #if list 0 is empty, fill it, else if 2 is, fill it, else if 3 is, fill it
        if arrayToFill == 1:
            list1.append(connectionInfo);
        elif arrayToFill == 2:
            list2.append(connectionInfo);
        elif arrayToFill == 3:
            list3.append(connectionInfo);

#Check for similarities between all connectivity lists
def arraySimilarities():
    for elem in list1:
        if elem in list2 and elem in list3:
            similarElementsFull.append(elem);

#see what elements are exclusive to the pairs of lists
def uniqueBetweenTwoLists():
    for elem in list1:
        if elem in list2 and not elem in list3:
            list1And2.append(elem);
        if elem in list3 and not elem in list2:
            list1And3.append(elem);
    for elem in list2:
        if elem in list3 and not elem in list1:
            list2And3.append(elem);

#check differences in wifi users compared to ethernet and external
def differences():
    for elem in list1:
        if not elem in list2 and not elem in list3:
            wifiDiffsList.append(elem);
    for elem in list2:
        if not elem in list1 and not elem in list3:
            ethernetDiffsList.append(elem);
    for elem in list3:
        if not elem in list1 and not elem in list2:
            externalDiffsList.append(elem);

#print contents of similarities and difference lists
def printer():
    statOutfile = open("Statistics.txt", "w+");

    #print common elements between all 3
    statOutfile.write("\nElements in common in all 3 lists (If 3 files were used): \n");
    if not similarElementsFull:
        statOutfile.write("None \n");
    else:
        for elem in similarElementsFull:
            statOutfile.write(elem + "\n");

    #print elements common to only 1 and 2
    statOutfile.write("\nElements only in common between lists 1 and 2 \n");
    if not list1And2:
        statOutfile.write("None \n");
    else:
        for elem in list1And2:
            statOutfile.write(elem + "\n");

    #print elements common only to 1 and 3
    statOutfile.write("\nElements only in common between lists 1 and 3: \n");
    if not list1And3:
        statOutfile.write("None \n");
    else:
        for element in list1And3:
            statOutfile.write(element + "\n");

    #print elements onlt common between 2 and 3
    statOutfile.write("\nElements only in common between lists 2 and 3: \n");
    if not list2And3:
        statOutfile.write("None \n");
    else:
        for elem in list2And3:
            statOutfile.write(elem + "\n");

    #print elements exclusive only to list 0
    statOutfile.write("\nElements exclusive to List 1: \n");
    if not wifiDiffsList:
        statOutfile.write("None \n");
    else:
        for elem in wifiDiffsList:
            statOutfile.write(elem + "\n");

    #print elements exclusive to list 1
    statOutfile.write("\nElements exclusive to List 2: \n");
    if not ethernetDiffsList:
        statOutfile.write("None \n");
    else:    
        for elem in ethernetDiffsList:
            statOutfile.write(elem + "\n");

    #print elements exclusive to list 2
    statOutfile.write("\nElements exclusive to List 3: \n");
    if not externalDiffsList:
        statOutfile.write("None \n");
    else:
        for elem in externalDiffsList:
            statOutfile.write(elem + "\n");

#works with desired file output
def outputToFile(fileNameOutput, arrayNumToOutput):
        try:
            outfile = open(fileNameOutput, "w+");
            outfile.write("Time created: " + time.ctime() + "\n");
            outfile.write("\n");
            if arrayNumToOutput is 0:
                for element in list1:
                    outfile.write(element + "\n");
            if arrayNumToOutput is 1:
                for element in list2:
                    outfile.write(element + "\n");
            if arrayNumToOutput is 2:
                for element in list3:
                    outfile.write(element + "\n");
            outfile.write("==============================END OF OUTPUT==============================");
            outfile.close();
        except IOError:
            print("There was an error creating the file");
            outputNameLoop = True;

#takes and validates user input by asking for number of files and names of each one desired to use
def inputFromUser():
    invalidCharacters = ['[', '/', '/', ':', '"', '*', '?', '<', '>', '|', ']', '+']; #([\\/:"*?<>|]+)
    try:
        numOfFilesToUse = int(input("\nHow many XML files would you like to use? (Minimum of 1, maximum of 3. Enter 0 to exit): "));
        
        #proceeds based on user input (0 is exit, and 1 - 3 are valid)
        if numOfFilesToUse == 0:
            print("Closing");
            sys.exit(0);
        elif numOfFilesToUse < 0 or numOfFilesToUse > 3:
            print("\nThe number entered is out of bounds. Please try again.");
            inputFromUser();
        else:
            x = 0;

            #iterates based on the number of files user specified wanting to use
            while x < numOfFilesToUse:
                fileNameInput = input("Enter name for input XML file " + str(x + 1) + ": ");

                #verifies that the file name is properly formatted and if it does, it is checked to see if it exists
                if len(fileNameInput) < 4:
                    print("\nThe file was not in the correct format and could not be read");
                elif fileNameInput[-4:] != ".xml" or len(fileNameInput) < 4:
                    print("\nYou can only utilize files with the .xml file extension");
                else:
                    if os.path.isfile(fileNameInput):
                        parserPass = x + 1;
                        xmlParser(fileNameInput, parserPass);
                        outputNameLoop = True;

                        #asks and validates the information pertaining to the desired outfile of the user. Does this for each iteration based on the number of files desired to be read.
                        while outputNameLoop:
                            fileNameOutput = input("\nWhat is the name of the text file you want to save this information to? (Include .txt extension): ");
                            if len(fileNameOutput) < 4:
                                print("\nThe file was not in the correct format and could not be read");
                            elif fileNameOutput[-4:] == ".txt":
                                if any(inv in fileNameOutput for inv in invalidCharacters):
                                    print("The file name was invalid. Check the name for invalid characters");
                                else:
                                    outputNameLoop = False;
                                    outputToFile(fileNameOutput, x);
                            elif fileNameOutput[-4:] != ".txt":
                                print("This file is not in the correct format. Check the entered file extension and be wary of invalid characters"); #([\\/:"*?<>|]+)";
                        x += 1;
                    else:
                        print("\nFile does not exist. Try again");
    except ValueError:
        print("\nThe value entered was not an integer. Please try again.");
        inputFromUser();

#function calls
inputFromUser();
arraySimilarities();
differences();
uniqueBetweenTwoLists();
printer();